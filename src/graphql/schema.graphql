

type Mutation {
  createAgent(data:createAgentInput!): User!
  updateAgent(id: ID!, data:updateAgentInput!): User!
  deleteAgent(id: ID!): Boolean!
  createPost(title: String!, content: String!): Post!
  deletePost(id: ID!): Boolean!
}

input createAgentInput {
  name: String!, 
  age: Int, 
  married: Boolean
}

input updateAgentInput {
  name: String, 
  age: Int, 
  married: Boolean, 
  average: Float
}

type Query {
  agent(id: ID!): User!
  agents(name: String, age: Int): [User!]!
  posts: [Post!]!
  post(id: ID!): Post!
  pictures: [Picture!]!
}

type Picture {
  id: ID!
  path: String!
  author: User!
  post: Post!
}

type User {
  id: ID!
  name: String!
  age: Int
  married: Boolean
  average: Float
  posts: [Post!]!
  pictures: [Picture!]!
}

type Post {
  id: ID!
  title: String!
  content: String
  author: User!
  picture: Picture!
}
